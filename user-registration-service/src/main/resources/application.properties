server.port= 8081
spring.application.name= USER-REGISTRATION-SERVICE

# DataSource Configuration
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true
#
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true 

# Discovery Client Configuration
eureka.client.register-with-eureka= true
eureka.client.fetch-registry= true
eureka.client.service-url.defaultZone: http://localhost:8761/eureka/
eureka.instance.hostname: localhost

# Redis Configuration
spring.cache.type= redis
spring.cache.redis.cache-null-values= true
spring.redis.host= localhost
spring.redis.port= 6379
spring.cache.redis.time-to-live=40000

# Actuator endpoints for Circuit Breaker
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# Circuit Breaker configuration
resilience4j.circuitbreaker.instances.USER-REGISTRATION-SERVICE.register-health-indicator=true
resilience4j.circuitbreaker.instances.USER-REGISTRATION-SERVICE.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.USER-REGISTRATION-SERVICE.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.USER-REGISTRATION-SERVICE.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.USER-REGISTRATION-SERVICE.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.USER-REGISTRATION-SERVICE.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.USER-REGISTRATION-SERVICE.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.USER-REGISTRATION-SERVICE.sliding-window-size=10
resilience4j.circuitbreaker.instances.USER-REGISTRATION-SERVICE.sliding-window-type=count-based

# Retry configuration
resilience4j.retry.instances.USER-REGISTRATION-SERVICE.max-retry-attempts=5
resilience4j.retry.instances.USER-REGISTRATION-SERVICE.wait-duration=5s

# Kafka Producer Configuration
spring.kafka.producer.bootstrap-servers= localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.topic.name = userDetails_topics

# Kafka Consumer Configuration
spring.kafka.consumer.bootstrap-servers= localhost:9092
#Configure consumer group in which consumer belongs to
spring.kafka.consumer.group-id= user
#configure offset for this consumer
spring.kafka.consumer.auto-offset-reset= earliest
#configure consumer key value deserializer
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages = *
spring.kafka.topic1.name = department_topic