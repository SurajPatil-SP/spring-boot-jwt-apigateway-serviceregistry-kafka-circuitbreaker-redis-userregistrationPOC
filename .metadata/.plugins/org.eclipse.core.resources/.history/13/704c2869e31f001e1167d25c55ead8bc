server.port= 8081
spring.application.name= USER-REGISTRATION-SERVICE

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

eureka.client.register-with-eureka= true
eureka.client.fetch-registry= true
eureka.client.service-url.defaultZone: http://localhost:8761/eureka/
eureka.instance.hostname: localhost

spring.cache.type= redis
spring.cache.redis.cache-null-values= true
spring.redis.host= localhost
spring.redis.port= 6379
spring.cache.redis.time-to-live=40000

spring.kafka.producer.bootstrap-servers= localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.topic.name = userDetails_topics

# configure consumer
spring.kafka.consumer.bootstrap-servers= localhost:9092
#Configure consumer group in which consumer belongs to
spring.kafka.consumer.group-id= user
#configure offset for this consumer
spring.kafka.consumer.auto-offset-reset= earliest
#configure consumer key value deserializer
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages = *
spring.kafka.topic1.name = department_topic