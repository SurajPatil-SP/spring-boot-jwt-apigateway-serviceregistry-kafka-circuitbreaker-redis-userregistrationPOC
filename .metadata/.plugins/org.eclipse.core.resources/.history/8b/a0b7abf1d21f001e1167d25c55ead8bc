package com.coforge.main.exceptions.handler;

import java.io.IOException;

import org.springframework.http.HttpStatus;
import org.springframework.http.client.ClientHttpResponse;
import org.springframework.stereotype.Component;
import org.springframework.web.client.ResponseErrorHandler;

import com.coforge.main.exceptions.ResourceNotFoundException;
import com.coforge.main.exceptions.ServiceUnavailableException;

@Component
public class RestTemplateResponseErrorHandler implements ResponseErrorHandler {

	@Override
	public boolean hasError(ClientHttpResponse httpResponse) throws IOException {

		return (httpResponse.getStatusCode().series() == HttpStatus.Series.CLIENT_ERROR
				|| httpResponse.getStatusCode().series() == HttpStatus.Series.SERVER_ERROR);
	}

	@Override
	public void handleError(ClientHttpResponse httpResponse) throws IOException {
		if (httpResponse.getStatusCode().is5xxServerError()) {
			if (httpResponse.getStatusCode() == HttpStatus.SERVICE_UNAVAILABLE) {
				throw new ServiceUnavailableException("Service is currently unavailable");
			}

		} else if (httpResponse.getStatusCode().is4xxClientError()) {
			if (httpResponse.getStatusCode() == HttpStatus.NOT_FOUND) {
				throw new ResourceNotFoundException("Resource not found");
			}

		}

	}

}
